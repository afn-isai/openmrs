name: Publish package to GitHub Packages
on:
  release:
    types: [published]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: IsantePlus/docker-isanteplus-server

jobs:
  publish-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8.0.232
          server-id: github-packages # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: pmanko
          server-password: ${{ secrets.TOKEN }} # env variable for token in deploy
      - uses: s4u/maven-settings-action@v2.2.0
        with:
          servers: |
            [{
                "id": "github-packages",
                "username": "${{ secrets.RELEASE_USERNAME }}",
                "password": "${{ secrets.RELEASE_TOKEN }}"
            }]
          githubServer: false
      - name: Publish package
        run: mvn -DskipTests -B -U deploy
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
           
  Docker-build:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ secrets.RELEASE_USERNAME }}
      TOKEN: ${{ secrets.RELEASE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Get latest Released Tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: Test Tag
        run: |
           echo ${{ steps.get-latest-tag.outputs.tag }} 
      - name: Checkout IsantePlus/docker-isanteplus-server
        uses: actions/checkout@v2
        with:
          repository: IsantePlus/docker-isanteplus-server
          ref: main   
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            ISANTEPLUS_VERSION=${{ steps.get-latest-tag.outputs.tag }} 
            USERNAME=${{ secrets.RELEASE_USERNAME }}
            TOKEN=${{ secrets.RELEASE_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline
 
  QA-build:
    runs-on: ubuntu-latest         
    steps:
      - name: Checkout IsantePlus/isanteplus_installation
        uses: actions/checkout@v2
        with:
          repository: IsantePlus/isanteplus_installation
          ref: ci
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}    
      - name:  Spin UP isanteplus server 
        run:  |
              docker-compose up -d
      - name: Sleep for 5 minutes 
        run: sleep 5m
        shell: bash 
      - name: Check containers
        run: docker ps  
      - name: wait for openmrs instance to start
        run: while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/openmrs/login.htm)" != "200" ]]; do sleep 1; done
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Checkout IsantePlus/isanteplus-qaframework
        uses: actions/checkout@v2
        with:
          repository: IsantePlus/isanteplus-qaframework
          ref : main
      - name: Run isanteplus QA Tests
        run: |
          echo "cucumber.publish.enabled=true" > src/test/resources/cucumber.properties
          mvn clean install -DskipTests=true
          cp -f src/test/resources/test-local.properties src/test/resources/test.properties
          mvn test         
   
